# primeiro arquivo que o spring considera para buscar as configurações das bibliotecas
#
#amqp:
#  admin:
#    auto-create: false
#  queues:
#    video-created:
#      exchange: video.events
#      routing-key: video.created
#      queue: video.created.queue
#    video-encoded:
#      exchange: video.events
#      routing-key: video.encoded
#      queue: video.encoded.queue
#
#google:
#  cloud:
#    credentials: ${GOOGLE_CLOUD_CREDENTIALS}
#    project-id: ${GOOGLE_CLOUD_PROJECT}
#    storage:
#      catalogo-videos:
#        bucket: fc3_videos
#        connect-timeout: 250
#        read-timeout: 5000
#        retry-delay: 50
#        retry-max-delay: 50
#        retry-max-attempts: 2
#        retry-multiplier: 1.0

# configurações do servidor
server:
  port: 8080
  servlet:
    context-path: /api
  compression: # compressão das respostas mais pesadas, visando ganho de performance
    enabled: true # Whether response compression is enabled.
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json # Comma-separated list of MIME types that should be compressed.
    min-response-size: 1024 # Minimum "Content-Length" value that is required for compression to be performed.
  undertow:
    threads: # configurando as threads do servidor
      worker: 64 # Generally this should be reasonably high, at least 10 per CPU core: https://undertow.io/undertow-docs/undertow-docs-2.1.0/index.html#listeners-2
      io: 4 # One IO thread per CPU core is a reasonable default: https://undertow.io/undertow-docs/undertow-docs-2.1.0/index.html#listeners-2

# configurações do spring
spring:
  datasource: # client de bd
    url: jdbc:mysql://${mysql.url}/${mysql.schema}?useSSL=true&serverTimezone=UTC&characterEncoding=UTF-8
    username: ${mysql.username}
    password: ${mysql.password}
    hikari: # administrador de pool de conexões com o bd
      auto-commit: false # desabilitando o autocommit
      connection-timeout: 250 # É uma configuração em milliseconds. O ideal é manter baixo para que estoure timeout logo e não prenda as threads.
      max-lifetime: 600000 # Tempo máximo que uma conexão pode ficar aberta (10 min) - security.
      maximum-pool-size: 20 # Mantemos até no máx 20 conexões com o banco de dados. O ideal é manter baixo mesmo, pois é algo custoso para o banco gerenciar. https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
      minimum-idle: 10
      pool-name: master
  jpa: # biblioteca de persistência
    open-in-view: false # considera uma transação desde o momento de chamada do controller, logo é muito custoso
    show-sql: true # printa as queries, importante só para debug em ambiente de desenvolvimento
    hibernate:
      ddl-auto: none # não autoriza o hibernate alterar o schema do bd. será utilizado o flyway
    properties:
      "[hibernate.dialect]": org.hibernate.dialect.MySQL5InnoDBDialect # escolha do dialeto
      "[hibernate.generate_statistics]": false # logs do hibernate
      "[hibernate.connection.provider_disables_autocommit]": true # informando a desabilitação prévia do autocommit
      # Para aumentar a performance ao máximo, desabilitamos o auto-commit e o open-in-view.
      # https://vladmihalcea.com/why-you-should-always-use-hibernate-connection-provider_disables_autocommit-for-resource-local-jpa-transactions/
#  rabbitmq:
#    dynamic: ${amqp.admin.auto-create}
#    host: ${amqp.host}
#    port: ${amqp.port}
#    username: ${amqp.username}
#    password: ${amqp.password}
#  servlet:
#    multipart:
#      max-file-size: 10GB # Max file size.
#      max-request-size: 100GB # Max request size.
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          jwk-set-uri: ${keycloak.host}/realms/${keycloak.realm}/protocol/openid-connect/certs
#          issuer-uri: ${keycloak.host}/realms/${keycloak.realm}
#
#storage:
#  catalogo-videos:
#    filename-pattern: type-{type}
#    location-pattern: videoId-{videoId}