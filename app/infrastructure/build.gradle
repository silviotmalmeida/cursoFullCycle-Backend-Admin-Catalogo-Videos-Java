buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.11.0'
    }
}

plugins {
    id 'java'
    // incluindo o plugin application
    id 'application'
    // incluindo o plugin do spring
    id 'org.springframework.boot' version '2.6.7'
    // incluindo o gerenciador de dependências do spring
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    // incluindo o gerenciador de migrations flyway
    id 'org.flywaydb.flyway' version '9.11.0'
}

group = 'com.silviotmalmeida.infrastructure'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

// configurando a task bootJar para definir o nome e destino do arquivo gerado
bootJar {
    archiveFileName = 'application.jar'
    destinationDirectory.set(file("${rootProject.layout.buildDirectory.get()}/libs"))
}

dependencies {
    // incluindo a dependência para o módulo domain
    implementation(project(":domain"))
    // incluindo a dependência para o módulo application
    implementation(project(":application"))
    // incluindo a dependência para o módulo vavr
    implementation 'io.vavr:vavr:0.10.5'

    // incluindo a dependência do conector do mysql
    implementation('mysql:mysql-connector-java')
    // incluindo a dependência para o spring web (mvc), excluindo o servidor tomcat
    implementation('org.springframework.boot:spring-boot-starter-web'){
        exclude module: 'spring-boot-starter-tomcat'
    }
    // incluindo a dependência para o servidor undertow
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    // incluindo a dependência para o módulo jpa
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    // incluindo a dependência para o módulo de testes
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    // incluindo o flyway para o módulo de testes realizarem as migrations
    testImplementation('org.flywaydb:flyway-core')
    // incluindo a dependência para o bd em memória h2 somente para os testes
    testRuntimeOnly('com.h2database:h2')
    // incluindo a dependência para o módulo utils
    testImplementation(project(":utils"))
}

flyway {
    // configurando o flyway
//    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:33062/backend-admin-video-catalog' // utilizada para subir pela ide
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://db:3306/backend-admin-video-catalog' // utilizada para subir pelo container
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: 'root'
    cleanDisabled = false
}

test {
    useJUnitPlatform()
}